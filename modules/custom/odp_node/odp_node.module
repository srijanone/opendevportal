<?php

/**
 * @file
 * Node module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function odp_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_ids = [
    'views-exposed-form-product-listing-block-1',
    'views-exposed-form-use-cases-listing-block-1',
    'views-exposed-form-use-cases-listing-block-2',
    'views-exposed-form-app-gallery-block-1',
    'views-exposed-form-events-block-1',
  ];
  if (in_array($form['#id'], $form_ids) && isset($form['gid'])) {
    $form['gid']['#type'] = 'select';
    $form['gid']['#options'] = \Drupal::service('odp_node.usergroup')->getUserGroups();
    $form['gid']['#size'] = 1;
    $form['gid']['#validated'] = TRUE;
  }

  // Modify the node form title while adding group content.
  $request = \Drupal::request();
  if ($request->attributes->get('_route') === 'entity.group_content.create_form') {
    $type = str_replace('group_node:', '', $request->attributes->get('plugin_id'));
    $type_label = \Drupal::entityTypeManager()->getStorage('node_type')->load($type)->get('name');
    $form['#title'] = t("Add %label", ["%label" => $type_label]);
  }

  // Add cancel button on node add/edit form to go back to daashboard.
  if ($request->query->get('destination')) {
    $goto_destination_forms = [
      'entity.group_content.create_form',
      'entity.node.edit_form',
      'layout_builder.overrides.node.view',
      'entity.group.edit_form',
      'entity.group_content.add_form',
    ];

    if (in_array($request->attributes->get('_route'), $goto_destination_forms)) {
      if (substr($request->query->get('destination'), 0, 1) == '/') {
        $redirect = $request->query->get('destination');
      }
      else {
        $redirect = '/' . $request->query->get('destination');
      }
      $form['actions']['goto_destination'] = [
        '#markup' => "<a id='goto-destination' class='button button--danger js-form-submit form-submit btn btn-primary'
          href='" . $redirect . "'>" . t('Cancel') .
        "</a>",
        '#weight' => 100,
      ];
    }
  }
}

/**
 * Implements hook_local_tasks_alter().
 */
function odp_node_local_tasks_alter(&$local_tasks) {
  if (in_array('admin', \Drupal::currentUser()->getRoles())) {
    unset($local_tasks['group.content']);
  }
}

/**
 * Implements hook_page_attachments().
 */
function odp_node_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'odp_node/odp_node';
}
