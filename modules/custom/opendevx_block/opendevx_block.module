<?php

/**
 * @file
 * Module file.
 */

use Drupal\node\NodeInterface;
use Drupal\block\Entity\Block;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;

/**
 * Implements hook_block_access().
 *
 * Visibility of the block.
 */
function opendevx_block_block_access(Block $block, $operation, AccountInterface $account) {
  if ($operation == 'view' && ($block->id() == 'product_api' || $block->id() == 'product_banner')) {
    $content_types = [
      'apps', 'article', 'assets', 'document_overview', 'events', 'faq',
      'forum', 'issues', 'resources', 'solutions', 'tutorials', 'use_cases', 'api_document',
    ];
    // Now based on Node Pages, Hide the block.
    if (!empty(\Drupal::request()->get('parent'))) {
      return AccessResult::neutral();
    }
    $node = \Drupal::routeMatch()->getParameter('node');
    if (($node instanceof NodeInterface) && ($node->gettype() == 'api_product')) {
      return AccessResult::neutral();
    }
    $current_path = \Drupal::service('path.current')->getPath();
    $path_index = explode('/', $current_path);
    if ($block->id() == 'product_banner' && $path_index[1] == 'product') {
      return AccessResult::neutral();
    }
    if (($block->id() == 'product_api' || $block->id() == 'product_banner') && (isset($path_index[3]) && in_array($path_index[3], $content_types))) {
      return AccessResult::neutral();
    }
    else {
      // Hiding the block if the node is not 'api_product' type.
      return AccessResult::forbiddenIf(TRUE)->addCacheableDependency($block);
    }
  }
}

/**
 * Implements hook_theme().
 */
function opendevx_block_theme() {
  return [
    'product_banner' => [
      'variables' => [
        'title' => NULL,
        'description' => NULL,
        'banner' => NULL,
        'productAttributes' => NULL,
      ],
    ],
    'organisation_site_logo' => [
      'variables' => [
        'orgLogo' => NULL,
        'orgTitle' => NULL,
      ],
    ],
    'cta_section_block' => [
      'variables' => [
        'ctaData' => NULL,
      ],
    ],
  ];
}
