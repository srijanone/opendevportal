openapi: 3.0.0
info:
  title: ELX (D8) CMS REST API
  description: ELX (D8) CMS REST API
  version: "1.0"

servers:
  - url: http://elx3dev.eastus.cloudapp.azure.com
    description: DEV
  - url: https://api-uat-elx3.myelx.com
    description: UAT
  - url: https://api-elx3.myelx.com
    description: PROD
tags:
  - name: "Best Seller (Generic)"
    description: "Best Seller (Generic)"
    externalDocs:
      description: "Best Seller (Generic)"
      url: "https://esteelauder-confluence.codefactori.com/pages/viewpage.action?pageId=327720853"
  - name: "Brand Story (Generic)"
    description: "Brand Story (Generic)"
    externalDocs:
      description: "Brand Story (Generic)"
      url: "https://esteelauder-confluence.codefactori.com/pages/viewpage.action?pageId=327720856"
  - name: "Games (Generic)"
    description: "Games (Generic)"
    externalDocs:
      description: "Games (Generic)"
      url: "https://esteelauder-confluence.codefactori.com/pages/viewpage.action?pageId=327727290"
  - name: "Homepage (Generic)"
    description: "Homepage (Generic)"
    externalDocs:
      description: "Homepage (Generic)"
      url: "https://esteelauder-confluence.codefactori.com/pages/viewpage.action?pageId=327720629"
  - name: "Menu (Generic)"
    description: "Menu (Generic)"
    externalDocs:
      description: "Menu (Generic)"
      url: "https://esteelauder-confluence.codefactori.com/pages/viewpage.action?pageId=327720813"
  - name: "Stories API (Generic)"
    description: "Stories API (Generic)"
    externalDocs:
      description: "Stories API (Generic)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Stories+API"
  - name: "Video API (Generic)"
    description: "Video API (Generic)"
    externalDocs:
      description: "Video API (Generic)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Video+API"
  - name: "Homepage (Proper)"
    description: "Homepage (Proper)"
    externalDocs:
      description: "Homepage (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/ELX+Proper+Homepage"
  - name: "Languages (Proper)"
    description: "Languages (Proper)"
    externalDocs:
      description: "Languages (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Languages"
  - name: "Learning Level (Proper)"
    description: "Learning Level API's (Proper)"
    externalDocs:
      description: "Learning Level (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Learning+Level+API%27s"
  - name: "Menu (Proper)"
    description: "Menu (Proper)"
    externalDocs:
      description: "Menu (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Menu"
  - name: "Products (Proper)"
    description: "Products (Proper)"
    externalDocs:
      description: "Products (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Products+API%27s"
  - name: "Quiz (Proper)"
    description: "Quiz (Proper)"
    externalDocs:
      description: "Quiz (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Quiz"
  - name: "Search (Proper)"
    description: "Search (Proper)"
    externalDocs:
      description: "Search (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Search"
  - name: "Stories (Proper)"
    description: "Stories (Proper)"
    externalDocs:
      description: "Stories (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Stories+API%27s"
  - name: "T&C API's (Proper)"
    description: "T&C API's (Proper)"
    externalDocs:
      description: "T&C API's (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/pages/viewpage.action?pageId=325848319"
  - name: "Tools API's (Proper)"
    description: "Tools API's (Proper)"
    externalDocs:
      description: "Tools API's (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Tools+API%27s"
  - name: "Users (Proper)"
    description: "Users (Proper)"
    externalDocs:
      description: "Users (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Users"
  - name: "Videos (Proper)"
    description: "Videos (Proper)"
    externalDocs:
      description: "Videos (Proper)"
      url: "https://esteelauder-confluence.codefactori.com/display/ELC30/Videos+API%27s"
paths:
  # Bestseller Carousel API
  /api/v1/productsCarousel:
    get:
      summary: "Products Carousel API"
      tags:
        - "Best Seller (Generic)"
        - "Products (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsourceoptional'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/productsCarousel'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Bestseller Categories API
  /api/v1/bestsellerCategories:
    get:
      summary: "Bestseller Categories API"
      tags:
        - "Best Seller (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/categoryId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/bestsellerCategories'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Best Seller Detail API
  /api/v1/bestSeller:
    get:
      summary: "Best Seller Detail API"
      tags:
        - "Best Seller (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/bestSellerDetail'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Bestseller Listing API
  /api/v1/bestSellerListing:
    get:
      summary: "Bestseller Listing API"
      tags:
        - "Best Seller (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/categoryId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/bestSellerListing'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Brand story Listing API
  /api/v1/brandStoryListing:
    get:
      summary: "Brand story Listing API"
      tags:
        - "Brand Story (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/brandStoryListing'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Brand Story Detail API
  /api/v1/brandStory:
    get:
      summary: "Brand Story Detail API"
      tags:
        - "Brand Story (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/brandStory'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Games Listings API
  /api/v1/gamesListing:
    get:
      summary: "Games Listings API"
      tags:
        - "Games (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: 'status'
          in: "query"
          description: "all or todo or completed default would be all"
          schema:
            type: "string"
      responses:
        '200':
          $ref: '#/components/responses/gamesListing'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Games Detail API
  /api/v1/games:
    get:
      summary: "Games Detail API"
      tags:
        - "Games (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/games'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Homepage - Bestseller (Generic)
  /api/v1/bestSellersSection:
    get:
      summary: "Homepage - Bestseller (Generic)"
      tags:
        - "Homepage (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/bestSellersSection'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Homepage - Games (Generic)
  /api/v1/gamesSection:
    get:
      summary: "Homepage - Games (Generic)"
      tags:
        - "Homepage (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/gamesSection'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Homepage -  How To (Videos) (Generic)
  /api/v1/howToSection:
    get:
      summary: "Homepage -  How To (Videos) (Generic)"
      tags:
        - "Homepage (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/howToSection'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Homepage -  Spotlight (Generic)
  /api/v1/genericSpotlightSection:
    get:
      summary: "Homepage -  Spotlight (Generic)"
      tags:
        - "Homepage (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/genericSpotlightSection'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Homepage -  Trending (Stories)
  /api/v1/trendingSection:
    get:
      summary: "Homepage -  Trending (Stories) (Generic)"
      tags:
        - "Homepage (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/trendingSection'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  # Primary Nav API (Generic)
  /api/v1/primaryNavigationMenuGeneric:
    get:
      summary: "Primary Nav API (Generic)"
      tags:
        - "Menu (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/PrimaryMenu'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Footer Nav API (Generic)
  /api/v1/footerMenuGeneric:
    get:
      summary: "Footer Nav (Generic)"
      tags:
        - "Menu (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsource'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/FooterMenu'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Stories Listing API (Generic)
  /api/v1/storiesListing:
    get:
      summary: "Stories Listing (Generic)"
      tags:
        - "Stories API (Generic)"
        - "Stories (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsourceoptional'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/storiesListing'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Story Details API (Generic)
  /api/v3/story:
    get:
      summary: "Stories Listing (Generic)"
      tags:
        - "Stories API (Generic)"
        - "Stories (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsourceoptional'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/story'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Videos Listing API (Generic)
  /api/v1/videoListings:
    get:
      summary: "Videos Listing API (Generic)"
      tags:
        - "Video API (Generic)"
        - "Videos (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsourceoptional'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/categoryId'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/videoListings'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  ##Proper APIs Started here
  #Explore Browse Product (Proper)
  /api/v1/browseProductss:
    get:
      summary: "Explore Browse Product (Proper)"
      tags:
        - "Homepage (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/browseProductss'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Explore Learning Levels (Proper)
  /api/v1/exploreLearningLevelss:
    get:
      summary: "Explore Learning Levels (Proper)"
      tags:
        - "Homepage (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/exploreLearningLevelss'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Spotlight section (Proper)
  /api/v1/spotlightSection:
    get:
      summary: "Spotlight section (Proper)"
      tags:
        - "Homepage (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/spotlightSection'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #What's New & Trending (Proper)
  /api/v1/storiesTrendingSection:
    get:
      summary: "What's New & Trending (Proper)"
      tags:
        - "Homepage (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/storiesTrendingSection'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Language list (Proper)
  /api/v1/languageList:
    get:
      summary: "Language list  (Proper)"
      tags:
        - "Languages (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/languageList'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Language list by market (Proper)
  /api/v2/languages:
    get:
      summary: "Languages (Proper)"
      tags:
        - "Languages (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/marketId'
      responses:
        '200':
          $ref: '#/components/responses/languages'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Get string translation (Proper)
  /api/v1/translationKey:
    get:
      summary: "Get string translation (Proper)"
      tags:
        - "Languages (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/languageCode'
      responses:
        '200':
          $ref: '#/components/responses/stringTranslations'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Update user language (Proper)
  /api/v1/updateUserLanguage:
    post:
      summary: "Update user language API (Proper)"
      tags:
        - "Languages (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/languageUpdate'
      responses:
        '200':
          $ref: '#/components/schemas/statusMessage200'
        '204':
          description: "No Content Found"
        '400':
          $ref: '#/components/schemas/statusMessage400'
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Learning Level Listings (Proper)
  /api/v1/learningLevels:
    get:
      summary: "Learning Level Listings (Proper)"
      tags:
        - "Learning Level (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/levelStatus'
      responses:
        '200':
          $ref: '#/components/responses/learningLevels'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Level Interactive Module Detail Page (Proper)
  /api/v1/levelInteractiveContent:
    get:
      summary: "Level Interactive Module Detail Page (Proper)"
      tags:
        - "Learning Level (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/levelInteractiveContent'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Term List (Module listing) of level (Proper)
  /api/v1/levelInteractiveTermsContent:
    get:
      summary: "Term List (Module listing) of level (Proper)"
      tags:
        - "Learning Level (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/categoryId'
      responses:
        '200':
          $ref: '#/components/responses/levelInteractiveTermsContent'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Footer Nav (Proper)
  /api/v1/footerMenu:
    get:
      summary: "Footer Nav (Proper)"
      tags:
        - "Menu (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/FooterMenu'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Primary Nav API (Proper)
  /api/v1/primaryNavigationMenu:
    get:
      summary: "Primary Nav API (Proper)"
      tags:
        - "Menu (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/primaryNavigationMenuV1'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Primary Nav API V2 (Proper)
  /api/v2/primaryNavigationMenu:
    get:
      summary: "Primary Nav API V2 (Proper)"
      tags:
        - "Menu (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/PrimaryMenu'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Top Header API (Proper)
  /api/v1/headerMenu:
    get:
      summary: "Top Header API (Proper)"
      tags:
        - "Menu (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/headerMenuV1'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Top Header API V2 (Proper)
  /api/v2/headerMenu:
    get:
      summary: "Top Header API V2 (Proper)"
      tags:
        - "Menu (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/headerMenu'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Product Categories API (Proper)
  /api/v1/productCategories:
    get:
      summary: "Product Categories API (Proper)"
      tags:
        - "Products (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/categoryId'
      responses:
        '200':
          $ref: '#/components/responses/productCategories'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Product Detail API (Proper)
  /api/v1/productDetails:
    get:
      summary: "Product Detail API (Proper)"
      tags:
        - "Products (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/productDetails'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Product Listings API (Proper)
  /api/v1/productListings:
    get:
      summary: "Product Listings API (Proper)"
      tags:
        - "Products (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/categoryId'
      responses:
        '200':
          $ref: '#/components/responses/productListings'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Badge API (Proper)
  /api/v1/getUserBadges:
    get:
      summary: "User Badge API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/getUserBadges'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Leaderboard Comparison Type (Proper)
  /api/v1/LeaderboardCompareType:
    get:
      summary: "User Leaderboard Comparison Type (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/LeaderboardCompareType'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User profile information (Proper)
  /api/v1/userDashboard:
    get:
      summary: "User profile information (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/userDashboard'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Add user points API (Proper)
  /api/v1/contentViewFlag:
    post:
      summary: "Add user points API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/contentViewFlag'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Forgot password API (Proper)
  /user/lost-passwords:
    post:
      summary: "Forgot password API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/mail'
      responses:
        '200':
          $ref: '#/components/responses/lostPasswords'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Refresh Token API (Proper)
  /oauth/token:
    post:
      summary: "Refresh Token API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refreshToken'
      responses:
        '200':
          $ref: '#/components/responses/refreshToken'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Flag API (Proper)
  /lm/api/v1/myFlags:
    get:
      summary: "User Flag API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/contentType'
      responses:
        '200':
          $ref: '#/components/responses/myFlags'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Reset password API (Proper)
  /user/lost-password-resets:
    post:
      summary: "Reset password API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/mail'
        - $ref: '#/components/parameters/temp_pass'
        - $ref: '#/components/parameters/new_pass'
      responses:
        '200':
          description: "Response for Reset password"
          content:
            application/json:
              schema:
                description: Reset password
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "Your New Password has been saved please log in."
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '406':
          description: "Response for Reset password"
          content:
            application/json:
              schema:
                description: Reset password
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "The password does not satisfy the password policies."
        '500':
          description: "Internal Server Error"
  #User Activity (Level Detail) API (Proper)
  /api/v1/userActivitiesLevel:
    get:
      summary: "User Activity (Level Detail) API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/categoryIdRequired'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/userActivitiesLevel'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Activities GDD API (Proper)
  /lm/api/v2/globalActivity:
    get:
      summary: "User Activities GDD API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nidInArray'
      responses:
        '200':
          $ref: '#/components/responses/globalActivity'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Logout API (Proper)
  /api/v1/userLogout:
    post:
      summary: "User Logout API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: "Response for user logout"
          content:
            application/json:
              schema:
                description: user logout
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "The Token ID is revoked"
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Activities UDD (Proper)
  /lm/api/v2/userActivity:
    get:
      summary: "User Activities UDD (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nidInArray'
        - $ref: '#/components/parameters/level'
      responses:
        '200':
          $ref: '#/components/responses/userActivity'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Activity (Proper)
  /api/v1/userActivities:
    get:
      summary: "User Activity (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/userActivities'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Interest update (Proper)
  /api/v1/userInterest:
    post:
      summary: "User Interest update (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/categoryIdInBody'
      responses:
        '200':
          description: "Response for user interest update"
          content:
            application/json:
              schema:
                description: user interest update
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "Interest updated."
                  status:
                    description: Status.
                    type: "boolean"
                    example: true
        '204':
          description: "No Content Found"
        '400':
          description: "Response for user interest update"
          content:
            application/json:
              schema:
                description: user interest update
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "(11,22) Invalid interest Id."
                  status:
                    description: Status.
                    type: "boolean"
                    example: false
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Password Edit/Update API (Proper)
  /api/v1/passwordChange:
    post:
      summary: "Password Edit/Update API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passwordChangeBodyParams'
      responses:
        '200':
          description: "Response for Password Edit/Update API"
          content:
            application/json:
              schema:
                description: Password Edit/Update API
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "Password updated."
                  status:
                    description: Status.
                    type: "boolean"
                    example: true
        '204':
          description: "No Content Found"
        '400':
          description: "Response for user interest update"
          content:
            application/json:
              schema:
                description: Password Edit/Update API
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "New Password should not be same as current password."
                  status:
                    description: Status.
                    type: "boolean"
                    example: false
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '406':
          description: "Response for user interest update"
          content:
            application/json:
              schema:
                description: Password Edit/Update API
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "The password does not satisfy the password policies."
                  status:
                    description: Status.
                    type: "boolean"
                    example: false
        '500':
          description: "Internal Server Error"
  #User profile rank API (Proper)
  /lm/api/v1/userProfileRank:
    get:
      summary: "User profile rank API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/userProfileRank'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #User Profile Pic Update API (Proper)
  /api/v1/user/profile/picture:
    post:
      summary: "User Profile Pic Update API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pictureParams'
      responses:
        '200':
          description: "Response for User Profile Pic Update"
          content:
            application/json:
              schema:
                description: User Profile Pic Update
                type: object
                properties:
                  image:
                    description: Image url.
                    type: "string"
                    example: "http://xyz.com/sites/default/files/userImage.jpg"
                  message:
                    description: Message.
                    type: "string"
                    example: "User profile picture updated successfully."
                  status:
                    description: Status.
                    type: "boolean"
                    example: true
        '204':
          description: "No Content Found"
        '400':
          description: "Response for User Profile Pic Update"
          content:
            application/json:
              schema:
                description: Password Edit/Update API
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "The data value cannot be empty."
                  status:
                    description: Status.
                    type: "boolean"
                    example: false
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '406':
          description: "Response for user interest update"
          content:
            application/json:
              schema:
                description: Password Edit/Update API
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "The password does not satisfy the password policies."
                  status:
                    description: Status.
                    type: "boolean"
                    example: false
        '500':
          description: "Internal Server Error"
  #User leaderBoard profile-page API (Proper)
  /lm/api/v1/userLeaderBoard:
    get:
      summary: "User leaderBoard profile-page API (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/compare'
      responses:
        '200':
          $ref: '#/components/responses/userLeaderBoard'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Password Policy Help Text (Proper)
  /api/v1/passwordPolicyHelpText:
    get:
      summary: "Password Policy Help Text (Proper)"
      tags:
        - "Users (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/passwordPolicyHelpText'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #API for video details (Proper)
  /api/v1/videoDetails:
    get:
      summary: "API for video details (Proper)"
      tags:
        - "Videos (Proper)"
        - "Video API (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsourceoptional'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
      responses:
        '200':
          $ref: '#/components/responses/videoDetails'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Videos Category API (Proper)
  /api/v1/videoCategory:
    get:
      summary: "Videos Category API (Proper)"
      tags:
        - "Videos (Proper)"
        - "Video API (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsourceoptional'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/categoryId'
      responses:
        '200':
          $ref: '#/components/responses/videoCategory'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Videos Listing API [Mobile] (Proper)
  /api/v1/videoListingMobile:
    get:
      summary: "Videos Listing API [Mobile] (Proper)"
      tags:
        - "Videos (Proper)"
        - "Video API (Generic)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        - $ref: '#/components/parameters/requestsourceoptional'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/videoListingMobile'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #List Quiz API (Proper)
  /api/v1/quiz:
    get:
      summary: "List Quiz API (Proper)"
      tags:
        - "Quiz (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/quizId'
      responses:
        '200':
          $ref: '#/components/responses/quiz'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Quiz Submission API (Proper)
  /lm/api/v1/quiz:
    post:
      summary: "Quiz Submission API (Proper)"
      tags:
        - "Quiz (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quizResponseParams'
      responses:
        '200':
          description: "Response for Password Edit/Update API"
          content:
            application/json:
              schema:
                description: Password Edit/Update API
                type: object
                properties:
                  message:
                    description: Message.
                    type: "string"
                    example: "Quiz Saved Successfully!"
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #TBD-UserActivities for Quiz API (Proper)
  /lm/api/v1/userQuizActivities:
    get:
      summary: "TBD-UserActivities for Quiz API (Proper)"
      tags:
        - "Quiz (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/quizId'
      responses:
        '200':
          $ref: '#/components/responses/userQuizActivities'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #AR Product Custom Table Data (Proper)
  /api/v1/arKeyValueData:
    get:
      summary: "AR Product Custom Table Data (Proper)"
      tags:
        - "Search (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/arKeyValueData'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #AR Product Search (Proper)
  /lm/api/v1/productSearch:
    get:
      summary: "AR Product Search (Proper)"
      tags:
        - "Search (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/searchTerm'
      responses:
        '200':
          $ref: '#/components/responses/productSearch'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Search API (Proper)
  /lm/api/v1/search:
    get:
      summary: "Search API (Proper)"
      tags:
        - "Search (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/searchTerm'
        - $ref: '#/components/parameters/categoryId'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: '#/components/responses/search'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Term & Condition Flag Update (Proper)
  /api/v1/userPolicyFlag:
    post:
      summary: "Term & Condition Flag Update (Proper)"
      tags:
        - "T&C API's (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPolicyFlagParams'
      responses:
        '200':
          description: "Response for Term & Condition Flag Update"
          content:
            application/json:
              schema:
                description: Term & Condition Flag Update
                type: object
                properties:
                  status:
                    description: Status.
                    type: "boolean"
                    example: true
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Terms & Conditions (anonymous) API (Proper)
  /api/v1/globalTermsAndCondition:
    get:
      summary: "Terms & Conditions (anonymous) API (Proper)"
      tags:
        - "T&C API's (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/userMail'
        - $ref: '#/components/parameters/clientId'
      responses:
        '200':
          $ref: '#/components/responses/globalTermsAndCondition'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Terms & Conditions and privacy policy (Proper)
  /api/v1/termsAndConditions:
    get:
      summary: "Terms & Conditions and privacy policy (Proper)"
      tags:
        - "T&C API's (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/globalTermsAndCondition'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Tools Category API (Proper)
  /api/v1/toolsCategory:
    get:
      summary: "Tools Category API (Proper)"
      tags:
        - "Tools API's (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/categoryId'
      responses:
        '200':
          $ref: '#/components/responses/toolsCategory'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Tools Listing API (Proper)
  /api/v1/toolsListings:
    get:
      summary: "Tools Listing API (Proper)"
      tags:
        - "Tools API's (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/toolsListings'
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"
  #Set fav/bookmark/Download Count API (Proper)
  /lm/api/v1/flag:
    get:
      summary: "Set fav/bookmark/Download Count API (Proper)"
      parameters:
        # Header Parameters
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/contenttype'
        # Query Parameters
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/nid'
        - $ref: '#/components/parameters/flag'
        - $ref: '#/components/parameters/status'
      responses:
        '200':
          description: "Response for Term & Condition Flag Update"
          content:
            application/json:
              schema:
                description: Term & Condition Flag Update
                type: object
                properties:
                  nid:
                    description: Content Id
                    type: integer
                    example: 123
                  favourites:
                    description: Favourites
                    type: integer
                    example: 100
                  bookmarks:
                    description: Bookmarks.
                    type: "integer"
                    example: 100
                  downloadCount:
                    description: Download Count.
                    type: "integer"
                    example: 100
                  status:
                    description: Status.
                    type: "boolean"
                    example: true
                  message:
                    description: Message.
                    type: "string"
                    example: "Flag successfully updated."
        '204':
          description: "No Content Found"
        '400':
          description: "Not Found"
        '401':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '405':
          description: "Method Not Allowed."
        '500':
          description: "Internal Server Error"

components:
  parameters:
    authorization:
      name: Authorization
      in: header
      description: Authorization should be Bearer {{Oauth Token}}
      required: true
      schema:
        type: string
    contenttype:
      name: Content-Type
      in: header
      description: Content type should be application/json
      required: true
      schema:
        type: string
    contentType:
      name: Content Type
      in: query
      description: stories, product_detail etc default all
      schema:
        type: string
    type:
      name: type
      in: query
      description: name of content type default all
      schema:
        type: string
    requestsource:
      name: Request-Source
      in: header
      description: Request source should be generic
      required: true
      schema:
        type: string
    requestsourceoptional:
      name: Request-Source
      in: header
      description: Request source should be generic if generic data needed
      schema:
        type: string
    format:
      name: "_format"
      in: "query"
      description: "json"
      schema:
        type: "string"
    limit:
      name: "limit"
      in: "query"
      description: "integer"
      schema:
        type: "integer"
    offset:
      name: 'offset'
      in: "query"
      description: "integer"
      schema:
        type: "integer"
    compare:
      name: 'compare'
      in: "query"
      description: "default: world"
      schema:
        type: "string"
    nid:
      name: 'nid'
      in: "query"
      required: true
      description: "Node ID"
      schema:
        type: "integer"
    searchTerm:
      name: 'searchTerm'
      in: "query"
      required: true
      description: "scanned search term string"
      schema:
        type: "string"
    nidInArray:
      name: 'nid[]'
      in: "query"
      required: true
      description: "Node IDs"
      schema:
        type: "integer"
    mail:
      name: 'mail'
      in: "query"
      required: true
      description: "Mail Id"
      schema:
        type: "string"
    userMail:
      name: 'userMail'
      in: "query"
      required: true
      description: "Mail Id"
      schema:
        type: "string"
    temp_pass:
      name: 'temp_pass'
      in: "query"
      required: true
      description: "Temp Password"
      schema:
        type: "string"
    new_pass:
      name: 'new_pass'
      in: "query"
      required: true
      description: "New Password"
      schema:
        type: "string"
    categoryId:
      name: 'categoryId'
      in: "query"
      description: "Category ID"
      schema:
        type: "integer"
    categoryIdRequired:
      name: 'categoryId'
      in: "query"
      required: true
      description: "Category ID"
      schema:
        type: "integer"
    id:
      name: 'id'
      in: "query"
      required: true
      description: "ID"
      schema:
        type: "integer"
    quizId:
      name: 'quizId'
      in: "query"
      required: true
      description: "quizId"
      schema:
        type: "integer"
    marketId:
      name: 'marketId'
      in: "query"
      required: true
      description: "Market ID"
      schema:
        type: "integer"
    languageCode:
      name: 'languageCode'
      in: "query"
      required: true
      description: "Language Code"
      schema:
        type: "string"
    levelStatus:
      name: 'levelStatus'
      in: "query"
      required: true
      description: "all [all, progress, completed]"
      schema:
        type: "string"
    token:
      name: 'token'
      in: "query"
      required: true
      description: "access_token"
      schema:
        type: "string"
    clientId:
      name: 'clientId'
      in: "query"
      required: true
      description: "clientId"
      schema:
        type: "string"
    level:
      name: 'level'
      in: "query"
      description: "true/false (default value false)"
      schema:
        type: "string"
    flag:
      name: 'flag'
      in: "query"
      required: true
      description: "favorites or bookmarks or downloads"
      schema:
        type: "string"
    status:
      name: 'status'
      in: "query"
      required: true
      description: "1 or 0"
      schema:
        type: "string"
  responses:
    productsCarousel:
      description: "Response for product carousel"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/productsCarousel'
    bestsellerCategories:
      description: "Response for bestseller categories"
      content:
        application/json:
          schema:
            description: Tools listing
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/productCategories'
              pager:
                $ref: '#/components/schemas/pager'
    bestSellerDetail:
      description: "Response for best seller detail"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bestSellerDetail'
    bestSellerListing:
      description: "Response for best seller listing"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListingResponse'
    brandStory:
      description: "Response for brand story detail"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/brandStory'
    brandStoryListing:
      description: "Response for brand story listing"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListingResponse'
    gamesListing:
      description: "Response for game listing"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gamesListing'
    games:
      description: "Response for game detail"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/games'
    storiesListing:
      description: "Response for stories listing"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListingResponse'
    story:
      description: "Response for story detail"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/story'
    bestSellersSection:
      description: "Response for home page bestseller section"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListingResponseWithoutPager'
    gamesSection:
      description: "Response for home page games section"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gamesListingWithoutPager'
    howToSection:
      description: "Response for home page How To (Videos) section"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/howToSection'
    genericSpotlightSection:
      description: "Response for homepage spotlight section"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/genericSpotlightSection'
    trendingSection:
      description: "Response for homepage Trending (Stories) section"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/trendingSection'
    PrimaryMenu:
      description: Primary Navigation Menu
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrimaryMenu'
    FooterMenu:
      description: "Response for footer menu"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FooterMenu'
    videoListings:
      description: "Response for video listing"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/videoListings'
    browseProductss:
      description: "Response for explore browse product"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/browseProducts'
    exploreLearningLevelss:
      description: "Response for explore learning levels"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exploreLearningLevelss'
    spotlightSection:
      description: "Response for spotlight section"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/spotlightSection'
    storiesTrendingSection:
      description: "Response for stories trending section"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/browseProducts'
    languageList:
      description: "Response for langauge list"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/languageList'
    languages:
      description: "Response for langauge list"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/languages'
    stringTranslations:
      description: "Response for string translations"
      content:
        application/json:
          schema:
            description: Response for listing
            type: array
            items:
              $ref: '#/components/schemas/stringTranslations'
    levelInteractiveContent:
      description: "Response for level interactive content"
      content:
        application/json:
          schema:
            description: Response for listing
            type: object
            properties:
              nid:
                description: Content Id
                type: integer
                example: 123
              articulateFile:
                description: Articulate file url.
                type: "string"
                example: "http://xyz.com/sites/default/files/index.html"
              body:
                description: Body.
                type: "string"
                example: "<p>Body</p>"
              displayTitle:
                description: Display title.
                type: "string"
                example: "Display title"
              categoryName:
                description: Category Name.
                type: "string"
                example: "Category Name"
              pointValue:
                description: Point Value.
                type: "integer"
                example: 12
              categoryId:
                description: Category Id.
                type: "integer"
                example: 20793
              interactiveContentPrevious:
                description: Interactive Content Previous.
                type: "integer"
                example: 85800
              interactiveContentNext:
                description: Interactive Content Next.
                type: "integer"
                example: 85803
    learningLevels:
      description: "Response for learning levels"
      content:
        application/json:
          schema:
            description: Response for listing
            type: array
            items:
              $ref: '#/components/schemas/learningLevels'
            example:
              - categoryId: 1023
                imageLarge: http://xyz.com/sites/default/files/imageLarge_1.jpg
                imageMedium: http://xyz.com/sites/default/files/imageMedium_1.jpg
                imageSmall: http://xyz.com/sites/default/files/imageSmall_2.jpg
                title: Title 1
                subTitle: Sub Title 1
                pointValue: 23
              - categoryId: 1051
                imageLarge: http://xyz.com/sites/default/files/imageLarge_2.jpg
                imageMedium: http://xyz.com/sites/default/files/imageMedium_2.jpg
                imageSmall: http://xyz.com/sites/default/files/imageSmall_2.jpg
                title: Title 2
                subTitle: Sub Title 2
                pointValue: 26
              - categoryId: 5435
                imageLarge: http://xyz.com/sites/default/files/imageLarge_3.jpg
                imageMedium: http://xyz.com/sites/default/files/imageMedium_3.jpg
                imageSmall: http://xyz.com/sites/default/files/imageSmall_3.jpg
                title: Title 3
                subTitle: Sub Title 3
                pointValue: 14
    levelInteractiveTermsContent:
      description: "Response for level interactive terms content"
      content:
        application/json:
          schema:
            description: Response for listing
            type: array
            items:
              $ref: '#/components/schemas/levelInteractiveTermsContent'
    primaryNavigationMenuV1:
      description: "Response for primary nav API"
      content:
        application/json:
          schema:
            description: Primary Menu
            type: object
            properties:
              primaryNavigationMenu:
                type: array
                items:
                  properties:
                    sequenceId:
                      description: SequenceId
                      type: integer
                      example: 1
                    content:
                      description: Content
                      type: "string"
                      example: "home"
                    name:
                      description: Name
                      type: "string"
                      example: "Home"
                    URL:
                      description: URL
                      type: "string"
                      example: ""
                    type:
                      description: Type
                      type: "string"
                      example: "internal/external"
                    attributes:
                      description: Attributes
                      type: "string"
                      example: ""
    headerMenuV1:
      description: "Response for header menu API"
      content:
        application/json:
          schema:
            description: Header Menu
            type: object
            properties:
              userDetails:
                type: array
                items:
                  $ref: '#/components/schemas/headerMenuUserDetails'
              navData:
                type: array
                items:
                  properties:
                    sequenceId:
                      description: Sequence Id
                      type: "integer"
                      example: 1
                    content:
                      description: Content.
                      type: "string"
                      example: "leaderboard"
                    name:
                      description: Name
                      type: "string"
                      example: "LEADERBOARD"
    headerMenu:
      description: "Response for header menu API"
      content:
        application/json:
          schema:
            description: Header Menu
            type: object
            properties:
              userDetails:
                type: array
                items:
                  $ref: '#/components/schemas/headerMenuUserDetails'
              navData:
                type: array
                items:
                  $ref: '#/components/schemas/navData'
    productCategories:
      description: "Response for product category"
      content:
        application/json:
          schema:
            description: product category
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/productCategories'
              pager:
                $ref: '#/components/schemas/pager'
    productDetails:
      description: "Response for product details"
      content:
        application/json:
          schema:
            description: product category
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/productDetails'
              userActivity:
                type: array
                items:
                  $ref: '#/components/schemas/userActivityListing'
    productListings:
      description: "Response for product details"
      content:
        application/json:
          schema:
            description: product listing
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/ListingItem'
              pager:
                $ref: '#/components/schemas/pager'
              userActivity:
                type: array
                items:
                  $ref: '#/components/schemas/userActivityListing'
    globalTermsAndCondition:
      description: "Response for Terms And Condition"
      content:
        application/json:
          schema:
            description: Terms And Condition
            type: array
            items:
              $ref: '#/components/schemas/TermConditionList'
    toolsCategory:
      description: "Response for Tools category"
      content:
        application/json:
          schema:
            description: Tools category
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/videoCategoryListing'
                example:
                  - name: Name 1
                    categoryId: 19676
                  - name: Name 2
                    categoryId: 19657
                  - name: Name 3
                    categoryId: 19689
                  - name: Name 4
                    categoryId: 19682
              pager:
                $ref: '#/components/schemas/pager'
    toolsListings:
      description: "Response for Tools listing"
      content:
        application/json:
          schema:
            description: Tools listing
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/ToolsListingItem'
              pager:
                $ref: '#/components/schemas/pager'

    getUserBadges:
      description: "Response for user badges"
      content:
        application/json:
          schema:
            description: user badges
            type: object
            properties:
              allBadges:
                type: array
                items:
                  $ref: '#/components/schemas/badgesList'
              userActivity:
                type: array
                items:
                  $ref: '#/components/schemas/userActivityKeyStatus'
    LeaderboardCompareType:
      description: "Response for leader board compare type"
      content:
        application/json:
          schema:
            description: leader board compare type
            type: array
            items:
              properties:
                id:
                  description: Content Id
                  type: "integer"
                  example: 85840
                name:
                  description: Name.
                  type: "string"
                  example: "Name"
    userDashboard:
      description: "Response for user profile information"
      content:
        application/json:
          schema:
            description: user profile information
            type: array
            items:
              properties:
                name:
                  description: Name
                  type: "string"
                  example: "Name"
                role:
                  description: Role.
                  type: "string"
                  example: "Role"
                firstName:
                  description: First Name.
                  type: "string"
                  example: "Beverly"
                lastName:
                  description: Last Name.
                  type: "string"
                  example: "Doe"
                createdDate:
                  description: Created Date.
                  type: "integer"
                  example: 1533825709
                currentLanguageId:
                  description: Current Language Id.
                  type: "string"
                  example: "en"
                currentLanguageName:
                  description: Current Language Name.
                  type: "string"
                  example: "English"
                policyFlag:
                  description: Policy Flag.
                  type: "boolean"
                  example: false
                userPicture:
                  description: User picture url.
                  type: "string"
                  example: "http://xyz.com/sites/default/files/userPicture.jpg"
                markets:
                  type: array
                  items:
                    $ref: '#/components/schemas/userMarkets'
                regions:
                  type: array
                  items:
                    $ref: '#/components/schemas/userRegions'
                interestStatus:
                  description: Interest Status.
                  type: "boolean"
                  example: true
                userInterest:
                  type: array
                  items:
                    $ref: '#/components/schemas/userInterest'
                LevelStatus:
                  description: Level Status.
                  type: "integer"
                  example: 0
                levelId:
                  description: Level Id.
                  type: "integer"
                  example: 16318
                storeInfo:
                  description: Store Info.
                  type: object
                  properties:
                    store:
                      description: Store.
                      type: "string"
                      example: "Store"
                    city:
                      description: City.
                      type: "string"
                      example: "New York"
                    state:
                      description: State.
                      type: "string"
                      example: "US"
                    rank:
                      description: Rank.
                      type: "integer"
                      example: 6
                userPoints:
                  description: User Points.
                  type: "integer"
                  example: 201
    contentViewFlag:
      description: "Response for add user points"
      content:
        application/json:
          schema:
            description: add user points
            type: object
            properties:
              nid:
                description: Content Id
                type: "integer"
                example: 976
              status:
                description: Status.
                type: "boolean"
                example: true
              message:
                description: Message.
                type: "string"
                example: "Successfully updated"
    lostPasswords:
      description: "Response for forget password"
      content:
        application/json:
          schema:
            description: Forget password
            type: object
            properties:
              message:
                description: Message.
                type: "string"
                example: "Further instructions have been sent to your email address."
    refreshToken:
      description: "Response for refresh token"
      content:
        application/json:
          schema:
            description: Refresh token
            type: object
            properties:
              token_type:
                description: Token Type.
                type: "string"
                example: "Bearer"
              expires_in:
                description: Expires in.
                type: "integer"
                example: 43200
              access_token:
                description: Access Token.
                type: "string"
                example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjU2Njc..."
              refresh_token:
                description: Refresh Token.
                type: "string"
                example: "def502007ec61240c15cc174d2d9389252e33dd8def502007ec..."


    myFlags:
      description: "Response for my flags"
      content:
        application/json:
          schema:
            description: product listing
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/MyFlagListingItem'
              pager:
                $ref: '#/components/schemas/pager'
    userActivitiesLevel:
      description: "Response for user activities level"
      content:
        application/json:
          schema:
            description: user activities level
            type: object
            properties:
              levelDetail:
                $ref: '#/components/schemas/levelDetail'
              userActivity:
                type: array
                items:
                  $ref: '#/components/schemas/userActivityListingWithStatus'
    globalActivity:
      description: "Response for global activity"
      content:
        application/json:
          schema:
            description: global activity
            type: array
            items:
              properties:
                nid:
                  description: Content Id
                  type: integer
                  example: 123
                favourites:
                  description: Favourites
                  type: integer
                  example: 100
                bookmarks:
                  description: Bookmarks.
                  type: "integer"
                  example: 100
                downloadCount:
                  description: Download Count.
                  type: "integer"
                  example: 100
    userActivity:
      description: "Response for user activity"
      content:
        application/json:
          schema:
            description: user activity
            type: array
            items:
              properties:
                nid:
                  description: Content Id
                  type: integer
                  example: 123
                userFavouriteStatus:
                  description: Favourites status
                  type: "boolean"
                  example: false
                userBookmarkStatus:
                  description: Bookmarks status.
                  type: "boolean"
                  example: false
    userActivities:
      description: "Response for user activities"
      content:
        application/json:
          schema:
            description: user activities
            type: array
            items:
              $ref: '#/components/schemas/userActivityListing'
    userProfileRank:
      description: "Response for user profile rank"
      content:
        application/json:
          schema:
            description: user profile rank
            type: object
            properties:
              userLeft:
                type: array
                items:
                  $ref: '#/components/schemas/userProfileRank'
              userCentre:
                type: array
                items:
                  $ref: '#/components/schemas/userProfileRank'
              userRight:
                type: array
                items:
                  $ref: '#/components/schemas/userProfileRank'
    userLeaderBoard:
      description: "Response for user leader board"
      content:
        application/json:
          schema:
            description: user leader board
            type: object
            properties:
              userData:
                type: array
                items:
                  $ref: '#/components/schemas/userDashboardData'
              allLeaderboard:
                type: array
                items:
                  $ref: '#/components/schemas/userDashboardData'
    passwordPolicyHelpText:
      description: "Response for password policy help text"
      content:
        application/json:
          schema:
            description: password policy help text
            type: object
            properties:
              label:
                description: label
                type: "string"
                example: "Password must have the following:"
              policy:
                type: object
                properties:
                  allowedLength:
                    description: Allowed Length
                    type: "string"
                    example: "minimum of 8 characters"
                  allowedNumber:
                    description: Allowed Number
                    type: "string"
                    example: "must include an alpha/numeric value"
                  allowedChar:
                    description: Allowed Char.
                    type: "string"
                    example: "must include upper/lower and a special character"
    videoDetails:
      description: "Response for video details"
      content:
        application/json:
          schema:
            description: video details
            type: array
            items:
              $ref: '#/components/schemas/videoListing'
    videoCategory:
      description: "Response for video category"
      content:
        application/json:
          schema:
            description: video category
            type: object
            properties:
              totalCount:
                description: Total Count
                type: "integer"
                example: 20
              results:
                type: array
                items:
                  $ref: '#/components/schemas/videoCategoryListing'
                example:
                  - name: Name 1
                    categoryId: 19676
                  - name: Name 2
                    categoryId: 19657
                  - name: Name 3
                    categoryId: 19689
                  - name: Name 4
                    categoryId: 19682
              pager:
                $ref: '#/components/schemas/pager'
    videoListingMobile:
      description: "Response for video listing mobile"
      content:
        application/json:
          schema:
            description: video category
            type: array
            items:
              properties:
                categoryId:
                  description: Category ID
                  type: "integer"
                  example: 0
                categoryName:
                  description: Category Name
                  type: "string"
                  example: "Others"
                totalCount:
                  description: Total Count
                  type: "integer"
                  example: 20
                results:
                  type: array
                  items:
                    $ref: '#/components/schemas/videoListingsItem'
                  example:
                    - nid: 101
                      title: Title 1
                      image: http://xyz.com/sites/default/files/image_1.jpg
                      video: http://xyz.com/sites/default/files/video_1.mp4
                      videoSubtitle: Video Subtitle 1
                      categoryName: Category 1
                      categoryId: 19739
                      pointValue: 23
                    - nid: 103
                      title: Title 2
                      image: http://xyz.com/sites/default/files/image_2.jpg
                      video: http://xyz.com/sites/default/files/video_2.mp4
                      videoSubtitle: Video Subtitle 2
                      categoryName: Category 2
                      categoryId: 19749
                      pointValue: 21
                    - nid: 104
                      title: Title 3
                      image: http://xyz.com/sites/default/files/image_3.jpg
                      video: http://xyz.com/sites/default/files/video_3.mp4
                      videoSubtitle: Video Subtitle 3
                      categoryName: Category 3
                      categoryId: 19769
                      pointValue: 25
                userActivity:
                  type: array
                  items:
                    $ref: '#/components/schemas/userActivityListing'
    quiz:
      description: "Response for quiz"
      content:
        application/json:
          schema:
            description: Quiz
            type: object
            properties:
              results:
                type: object
                properties:
                  id:
                    description: Id
                    type: "integer"
                    example: 1
                  title:
                    description: title
                    type: "string"
                    example: "Quiz 1"
                  questions:
                    type: array
                    items:
                      properties:
                        qid:
                          description: qid
                          type: "integer"
                          example: 2
                        title:
                          description: title
                          type: "string"
                          example: "Question 1"
                        question:
                          description: Question
                          type: "string"
                          example: "How will you create"
                        type:
                          description: Type
                          type: "string"
                          example: "mcq"
                        isMultipleAnswer:
                          description: Is Multiple Answer
                          type: "boolean"
                          example: true
                        options:
                          type: array
                          items:
                            properties:
                              id:
                                description: Id
                                type: "integer"
                                example: 2
                              option:
                                description: Option
                                type: "string"
                                example: "Goede"
                              isCorrectAnswer:
                                description: Is Correct Answer
                                type: "boolean"
                                example: true
    userQuizActivities:
      description: "Response for quiz activities"
      content:
        application/json:
          schema:
            description: Quiz Activities
            type: object
            properties:
              results:
                type: object
                properties:
                  id:
                    description: Id
                    type: "integer"
                    example: 1
                  userActivity:
                    type: array
                    items:
                      properties:
                        qid:
                          description: qid
                          type: "integer"
                          example: 2
                        userAnswer:
                          type: array
                          items:
                            properties:
                              id:
                                description: id
                                type: "integer"
                                example: 3
                              isCorrect:
                                description: Is Correct
                                type: "boolean"
                                example: true
    arKeyValueData:
      description: "Response for Custom Table Data"
      content:
        application/json:
          schema:
            description: Custom Table Data
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/KeyValue'
    productSearch:
      description: "Response for product search"
      content:
        application/json:
          schema:
            description: Product Search
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/productSearch'
    search:
      description: "Response for search"
      content:
        application/json:
          schema:
            description: Search
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/components/schemas/SearchListingItem'
              pager:
                $ref: '#/components/schemas/pager'
              userActivity:
                type: array
                items:
                  $ref: '#/components/schemas/userActivityListing'
  schemas:
    languageUpdate:
      description: Language
      properties:
        languageCode:
          description: It should be language code
          type: string
          example: 'en'
    refreshToken:
      description: Profile definition
      properties:
        grant_type:
          description: It should be refresh_token
          type: string
          example: 'refresh_token'
        client_id:
          description: It should be some thing '1db7440c-79f0-....'
          type: string
          example: '1db7440c-79f0-....'
        client_secret:
          description: Client secret can be any text
          type: string
          example: 'dasdasdasdas'
        refresh_token:
          description: It should be refresh token
          type: string
          example: 'asdfsafdsafdsfsfsdfsdfsdfs'
    categoryIdInBody:
      description: Category
      properties:
        categoryId:
          description: In array
          type: array
          example: ['categoryId1', 'categoryId2']
    userPolicyFlagParams:
      description: User Policy Flag
      properties:
        flagStatus:
          description: Flag Status
          type: integer
          example: 1
    passwordChangeBodyParams:
      description: Password
      properties:
        currentPassword:
          description: Current password
          type: string
          example: "srijan@1234"
        newPassword:
          description: New password
          type: string
          example: "srijan@123"
    pictureParams:
      description: Picture
      properties:
        filename:
          description: Filename
          type: string
          example: "test3fdf.jpg"
        filesize:
          description: filesize
          type: string
          example: "1"
        image:
          description: image
          type: string
          example: "/9j/4AAQSkZJRgABAQAAAQABAAD...."
    quizResponseParams:
      description: Quiz Response Params
      properties:
        id:
          description: Quiz Id
          type: integer
          example: 1
        attemptStartTime:
          description: Attempt Start Time
          type: integer
          example: 1551700205
        attemptFinishTime:
          description: Attempt Finish Time
          type: integer
          example: 1551700205
        userActivity:
          description: User Activity
          type: array
          items:
            properties:
              qid:
                description: Question Id
                type: integer
                example: 2
              userAnswer:
                type: array
                items:
                  properties:
                    id:
                      description: User choice option id
                      type: integer
                      example: 4
                    isCorrect:
                      description: Is Correct
                      type: boolean
                      example: true
    ListingResponse:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListingItem'
          example:
            - nid: 10
              imageLarge: http://xyz.com/sites/default/files/imageLarge.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall.jpg
              displayTitle: Display Title 1
              subTitle: Sub Title 1
              pointValue: 20
            - nid: 12
              imageLarge: http://xyz.com/sites/default/files/imageLarge.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall.jpg
              displayTitle: Display Title 2
              subTitle: Sub Title 2
              pointValue: 25
            - nid: 13
              imageLarge: http://xyz.com/sites/default/files/imageLarge.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall.jpg
              displayTitle: Display Title 3
              subTitle: Sub Title 3
              pointValue: 23
        pager:
          $ref: '#/components/schemas/pager'
    ListingResponseWithoutPager:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListingItem'
          example:
            - nid: 10
              imageLarge: http://xyz.com/sites/default/files/imageLarge.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall.jpg
              displayTitle: Display Title 1
              subTitle: Sub Title 1
              pointValue: 20
            - nid: 12
              imageLarge: http://xyz.com/sites/default/files/imageLarge.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall.jpg
              displayTitle: Display Title 2
              subTitle: Sub Title 2
              pointValue: 25
            - nid: 13
              imageLarge: http://xyz.com/sites/default/files/imageLarge.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall.jpg
              displayTitle: Display Title 3
              subTitle: Sub Title 3
              pointValue: 23
    gamesListing:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GameListingItem'
          example:
            - nid: 10
              imageLarge: http://xyz.com/sites/default/files/imageLarge_1.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium_1.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall_1.jpg
              title: Title 1
              category: Category 1
              pointValue: 20
            - nid: 12
              imageLarge: http://xyz.com/sites/default/files/imageLarge_2.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium_2.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall_2.jpg
              title: Title 2
              category: Category 2
              pointValue: 25
            - nid: 13
              imageLarge: http://xyz.com/sites/default/files/imageLarge_3.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium_3.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall_3.jpg
              title: Title 3
              category: Category 3
              pointValue: 23
        pager:
          $ref: '#/components/schemas/pager'
    videoListings:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/videoListingsItem'
          example:
            - nid: 101
              title: Title 1
              image: http://xyz.com/sites/default/files/image_1.jpg
              video: http://xyz.com/sites/default/files/video_1.mp4
              videoSubtitle: Video Subtitle 1
              categoryName: Category 1
              categoryId: 19739
              pointValue: 23
            - nid: 103
              title: Title 2
              image: http://xyz.com/sites/default/files/image_2.jpg
              video: http://xyz.com/sites/default/files/video_2.mp4
              videoSubtitle: Video Subtitle 2
              categoryName: Category 2
              categoryId: 19749
              pointValue: 21
            - nid: 104
              title: Title 3
              image: http://xyz.com/sites/default/files/image_3.jpg
              video: http://xyz.com/sites/default/files/video_3.mp4
              videoSubtitle: Video Subtitle 3
              categoryName: Category 3
              categoryId: 19769
              pointValue: 25
        pager:
          $ref: '#/components/schemas/pager'
    gamesListingWithoutPager:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/GameListingItem'
          example:
            - nid: 10
              imageLarge: http://xyz.com/sites/default/files/imageLarge_1.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium_1.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall_1.jpg
              title: Title 1
              category: Category 1
              pointValue: 20
            - nid: 12
              imageLarge: http://xyz.com/sites/default/files/imageLarge_2.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium_2.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall_2.jpg
              title: Title 2
              category: Category 2
              pointValue: 25
            - nid: 13
              imageLarge: http://xyz.com/sites/default/files/imageLarge_3.jpg
              imageMedium: http://xyz.com/sites/default/files/imageMedium_3.jpg
              imageSmall: http://xyz.com/sites/default/files/imageSmall_3.jpg
              title: Title 3
              category: Category 3
              pointValue: 23
    productsCarousel:
      description: Product Carousel
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListingTitleImage'
          example:
            - title: Test Product Content
              image:
            - title: Product Carousel Pleasure Banner Edit and Save A
              image: http://xyz.com/sites/default/files/image_1.jpg
            - title: Products Carousel ARN Banner
              image: http://xyz.com/sites/default/files/image_2.jpg
    howToSection:
      description: Homepage - How To Section
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/HowToListingItem'
    genericSpotlightSection:
      description: Homepage - Spotlight Section
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SpotlightListingItem'
    trendingSection:
      description: Homepage - Trending (Stories) Section
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListingItem'
    bestSellerDetail:
      description: Best seller detail
      type: object
      properties:
        results:
          type: array
          items:
            properties:
              nid:
                description: Content Id
                type: integer
                example: 123
              title:
                description: Title.
                type: "string"
                example: "best seller"
              pointValue:
                description: Point Value.
                type: "integer"
                example: 12
              subtitle:
                description: Sub title.
                type: "string"
                example: "Subtitle of bestsellers"
              lifestyleImage:
                type: array
                items:
                  properties:
                    imageLarge:
                      description: Large image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageMedium:
                      description: Medium image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageSmall:
                      description: Small image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
              productImage:
                type: array
                items:
                  properties:
                    imageLarge:
                      description: Large image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageMedium:
                      description: Medium image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageSmall:
                      description: Small image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
              description:
                description: Description.
                type: "string"
                example: "<p>Short description</p>"
              bestSellerIcons:
                type: array
                items:
                  properties:
                    title:
                      description: Title.
                      type: "string"
                      example: "Icon Title"
                    description:
                      description: Description.
                      type: "string"
                      example: "<p>Icon description</p>"
                    imageLarge:
                      description: Large image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageMedium:
                      description: Medium image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageSmall:
                      description: Small image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
              bestsellerVideo:
                type: array
                items:
                  properties:
                    caption:
                      description: Caption.
                      type: "string"
                      example: "<p>Best Seller Video Caption</p>"
                    video:
                      description: Video url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/ideo.mp4"
              bestsellerDetails:
                type: array
                items:
                  properties:
                    title:
                      description: Title.
                      type: "string"
                      example: "Image and Text"
                    description:
                      description: Description.
                      type: "string"
                      example: "<p>Image and text description</p>"
                    type:
                      description: Type.
                      type: "string"
                      example: "textImgLef|textImgRight|image|text|video"
                    imagealign:
                      description: Image align.
                      type: "string"
                      example: "right"
                    imageLarge:
                      description: Large image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageMedium:
                      description: Medium image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageSmall:
                      description: Small image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    video:
                      description: Video url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/video.mp4"
              howToUse:
                type: array
                items:
                  properties:
                    type:
                      description: Type.
                      type: "string"
                      example: "image|text|video|videoandtext|imageandtext"
                    title:
                      description: Title.
                      type: "string"
                      example: "How to use title"
                    description:
                      description: Description.
                      type: "string"
                      example: "<p>Image and text description</p>"
                    imageLarge:
                      description: Large image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageMedium:
                      description: Medium image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageSmall:
                      description: Small image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    video:
                      description: Video url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/video.mp4"
              howToSellIt:
                type: array
                items:
                  properties:
                    type:
                      description: Type.
                      type: "string"
                      example: "internal|external"
                    nid:
                      description: Content Id
                      type: integer
                      example: 123|
                    title:
                      description: Title.
                      type: "string"
                      example: "How to use title"
                    description:
                      description: Description.
                      type: "string"
                      example: "<p>Image and text description</p>"
                    imageLarge:
                      description: Large image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageMedium:
                      description: Medium image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
                    imageSmall:
                      description: Small image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
    brandStory:
      description: Brand story detail
      type: object
      properties:
        results:
          type: array
          items:
            properties:
              nid:
                description: Content Id
                type: integer
                example: 123
              title:
                description: Title.
                type: "string"
                example: "brand story"
              brandStoryDescription:
                description: Brand story description.
                type: "string"
                example: "<p>Main description</p>"
              quote:
                description: Quote.
                type: "string"
                example: "<p>Quote description</p>"
              ourStory:
                type: array
                items:
                  properties:
                    title:
                      description: Title.
                      type: "string"
                      example: "Our story Title"
                    description:
                      description: Our story description.
                      type: "string"
                      example: "<p>Our story description</p>"
                    media:
                      description: media url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/media.mp3"
                    type:
                      description: Type.
                      type: "string"
                      example: "video/mp4|image/jpg"
              imageCollage:
                type: array
                items:
                  properties:
                    description:
                      description: Description.
                      type: "string"
                      example: "<p>Image collage description</p>"
                    image:
                      description: Image url.
                      type: "string"
                      example: "http://xyz.com/sites/default/files/image.jpg"
              brandTimeLine:
                type: array
                items:
                  properties:
                    title:
                      description: Title.
                      type: "string"
                      example: "Brand timeline title"
                    data:
                      type: array
                      items:
                        properties:
                          year:
                            description: Year.
                            type: "string"
                            example: "1952"
                          description:
                            description: Description.
                            type: "string"
                            example: "<p>Brand timeline description</p>"
                          media:
                            description: media url.
                            type: "string"
                            example: "http://xyz.com/sites/default/files/media.mp3"
                          type:
                            description: Type.
                            type: "string"
                            example: "video/mp4|image/jpg"
              relatedStory:
                type: array
                items:
                  properties:
                    title:
                      description: Title.
                      type: "string"
                      example: "Related story title"
                    data:
                      type: array
                      items:
                        properties:
                          nid:
                            description: Content Id
                            type: integer
                            example: 123
                          title:
                            description: Title.
                            type: "string"
                            example: "story title"
                          image:
                            description: Image url.
                            type: "string"
                            example: "http://xyz.com/sites/default/files/image.jpg"
    games:
      description: Games detail
      type: object
      properties:
        results:
          type: array
          items:
            properties:
              nid:
                description: Content Id
                type: integer
                example: 123
              title:
                description: Title.
                type: "string"
                example: "Title"
              articulateFile:
                description: Articulate file url.
                type: "string"
                example: "http://xyz.com/sites/default/files/index.html"
              pointValue:
                description: Point Value.
                type: "integer"
                example: 12
    story:
      description: Story detail
      type: object
      properties:
        results:
          type: array
          items:
            properties:
              nid:
                description: Content Id
                type: integer
                example: 123
              displayTitle:
                description: Display title.
                type: "string"
                example: "Display title"
              subTitle:
                description: Sub title.
                type: "string"
                example: "Subtitle"
              imageLarge:
                description: Large image url.
                type: "string"
                example: "http://xyz.com/sites/default/files/image.jpg"
              imageMedium:
                description: Medium image url.
                type: "string"
                example: "http://xyz.com/sites/default/files/image.jpg"
              imageSmall:
                description: Small image url.
                type: "string"
                example: "http://xyz.com/sites/default/files/image.jpg"
              body:
                description: Body.
                type: "string"
                example: "<p>Body</p>"
              pointValue:
                description: Point Value.
                type: "integer"
                example: 12
              quizId:
                description: Quiz Id.
                type: "integer"
                example: 12
              relatedStories:
                description: Related story
                type: array
                items:
                  $ref: '#/components/schemas/ListingItem'
    browseProducts:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListingItem'
        userActivity:
          type: array
          items:
            $ref: '#/components/schemas/userActivityListing'
    exploreLearningLevelss:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/LearningLevelsListingItem'
        userActivity:
          type: array
          items:
            $ref: '#/components/schemas/LearningLevelsActivityListing'
    spotlightSection:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProperSpotlightListingItem'
        userActivity:
          type: array
          items:
            $ref: '#/components/schemas/userActivityListing'
    languageList:
      description: Response for listing
      type: array
      items:
        $ref: '#/components/schemas/languageListing'
      example:
        - languageCode: en
          languageName: English
          languageDirection: ltr
        - languageCode: zh-hans
          languageName: Chinese, Simplified
          languageDirection: ltr
    languages:
      description: Response for listing
      type: object
      properties:
        primary:
          type: array
          items:
            $ref: '#/components/schemas/languageListing'
        secondary:
          type: array
          items:
            $ref: '#/components/schemas/languageListing'
          example:
            - languageCode: en
              languageName: English
              languageDirection: ltr
            - languageCode: zh-hans
              languageName: Chinese, Simplified
              languageDirection: ltr
    learningLevels:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/LearningLevelsListingItem'
        pager:
          $ref: '#/components/schemas/pager'
        userActivity:
          type: array
          items:
            $ref: '#/components/schemas/LearningLevelsActivityListing'
    levelInteractiveTermsContent:
      description: Response for listing
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ModuleListing'
        pager:
          $ref: '#/components/schemas/pager'
        levelDetail:
          $ref: '#/components/schemas/levelDetail'
        userActivity:
          type: array
          items:
            $ref: '#/components/schemas/userActivityListingWithStatus'

    ListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        displayTitle:
          description: Display title.
          type: "string"
          example: "Display title"
        subTitle:
          description: Sub title.
          type: "string"
          example: "Subtitle"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    GameListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        title:
          description: Title.
          type: "string"
          example: "Title"
        category:
          description: Category.
          type: "string"
          example: "Category"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    videoListingsItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        title:
          description: Title.
          type: "string"
          example: "Title"
        image:
          description: Image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        video:
          description: Video url.
          type: "string"
          example: "http://xyz.com/sites/default/files/video.mp4"
        videoSubtitle:
          description: Video Subtitle.
          type: "string"
          example: "Video Subtitle"
        categoryName:
          description: Category Name.
          type: "string"
          example: "Category Name"
        categoryId:
          description: Category Id
          type: integer
          example: 123
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    HowToListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        image:
          description: Image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        video:
          description: Video url.
          type: "string"
          example: "http://xyz.com/sites/default/files/video.mp4"
        videoSubtitle:
          description: Video sub title.
          type: "string"
          example: "Video sub title"
        displayTitle:
          description: Display title.
          type: "string"
          example: "Display title"
        subTitle:
          description: Sub title.
          type: "string"
          example: "Subtitle"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    SpotlightListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        subTitle:
          description: Sub Title.
          type: "string"
          example: "Sub Title"
        displayTitle:
          description: Display Title.
          type: "string"
          example: "Display Title"
        type:
          description: Type.
          type: "string"
          example: "Content type name"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    ProperSpotlightListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        subTitle:
          description: Sub Title.
          type: "string"
          example: "Sub Title"
        type:
          description: Type.
          type: "string"
          example: "Content type name"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    ListingTitleImage:
      properties:
        title:
          description: title.
          type: "string"
          example: "Title"
        image:
          description: Image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
    userActivityListing:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        favourites:
          description: Favourites
          type: integer
          example: 100
        bookmarks:
          description: Bookmarks.
          type: "integer"
          example: 100
        downloadCount:
          description: Download Count.
          type: "integer"
          example: 100
        userFavouriteStatus:
          description: Favourite Status.
          type: "boolean"
          example: true
        userBookmarkStatus:
          description: Bookmark Status.
          type: "boolean"
          example: true
    userActivityListingWithStatus:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        status:
          description: Status
          type: integer
          example: 0
        favourites:
          description: Favourites
          type: integer
          example: 100
        bookmarks:
          description: Bookmarks.
          type: "integer"
          example: 100
        downloadCount:
          description: Download Count.
          type: "integer"
          example: 100
        userFavouriteStatus:
          description: Favourite Status.
          type: "boolean"
          example: true
        userBookmarkStatus:
          description: Bookmark Status.
          type: "boolean"
          example: true
    languageListing:
      properties:
        languageCode:
          description: Language Code.
          type: "string"
          example: "en"
        languageName:
          description: Language Name.
          type: "string"
          example: "English"
        languageDirection:
          description: Language Direction.
          type: "string"
          example: "ltr"
    stringTranslations:
      properties:
        browseProductLibTitle:
          description: String name.
          type: "string"
          example: "當得程說"
        diveInToSeeMore:
          description: String name.
          type: "string"
          example: "在式出斯並安德，我間張電爸減景且"
        esteeCopyRight:
          description: String name.
          type: "string"
          example: "營他性導港們認工統教 營他性導港們認工統教 營他性導港們認工統教"
    statusMessage200:
      properties:
        message:
          description: Message.
          type: "string"
          example: "language updated."
        status:
          description: Status.
          type: "boolean"
          example: true
    statusMessage400:
      properties:
        message:
          description: Message.
          type: "string"
          example: "Invalid language code."
        status:
          description: Status.
          type: "boolean"
          example: false
    LearningLevelsActivityListing:
      properties:
        categoryId:
          description: Content Id
          type: integer
          example: 123
        percentage:
          description: Percentage
          type: integer
          example: 0
        favourites:
          description: Favourites
          type: integer
          example: 100
        bookmarks:
          description: Bookmarks.
          type: "integer"
          example: 100
        downloadCount:
          description: Download Count.
          type: "integer"
          example: 100
        userFavouriteStatus:
          description: Favourite Status.
          type: "boolean"
          example: true
        userBookmarkStatus:
          description: Bookmark Status.
          type: "boolean"
          example: true
    LearningLevelsListingItem:
      properties:
        categoryId:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        title:
          description: Title.
          type: "string"
          example: "Title"
        subTitle:
          description: Sub title.
          type: "string"
          example: "Subtitle"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    ModuleListing:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        displayTitle:
          description: Display Title.
          type: "string"
          example: "Display Title"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    levelDetail:
      properties:
        name:
          description: Name.
          type: "string"
          example: "Name"
        completedCount:
          description: Completed Count.
          type: "integer"
          example: 0
        totalCount:
          description: Total Counts.
          type: "integer"
          example: 4
        totalPoints:
          description: Total Points.
          type: "integer"
          example: 175
        percentageCompleted:
          description: Percentage Completed.
          type: "integer"
          example: 0
        userLevelActivity:
          type: object
          properties:
            categoryId:
              description: Content Id
              type: integer
              example: 123
            favourites:
              description: Favourites
              type: integer
              example: 100
            bookmarks:
              description: Bookmarks.
              type: "integer"
              example: 100
            downloadCount:
              description: Download Count.
              type: "integer"
              example: 100
            userFavouriteStatus:
              description: Favourite Status.
              type: "boolean"
              example: true
            userBookmarkStatus:
              description: Bookmark Status.
              type: "boolean"
              example: true
    pager:
      properties:
        count:
          description: Total Count
          type: integer
        pages:
          description: No of pages
          type: integer
        items_per_page:
          description: Items per page
          type: integer
        current_page:
          description: Current Page
          type: integer
        next_page:
          description: Next Page
          type: integer
    PrimaryMenu:
      description: Primary Menu
      type: object
      properties:
        primaryNavigationMenu:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
    FooterMenu:
      description: Product listing
      type: object
      properties:
        socialMenu:
          type: array
          items:
            $ref: '#/components/schemas/socialMenu'
        privacyMenu:
          type: array
          items:
            $ref: '#/components/schemas/privacyMenu'
    MenuItem:
      properties:
        sequenceId:
          description: Weight of menu item.
          type: integer
          example: 1
        content:
          description: Large image url.
          type: "string"
          example: "home"
        name:
          description: Title of menu.
          type: "string"
          example: "Home"
        URL:
          description: URL if there is any.
          type: "string"
          example: "/front"
        type:
          description: Type of menu item.
          type: "string"
          example: "internal/external"
        attributes:
          description: Attributes if target blank
          type: object
          properties:
            target:
              type: "string"
              example: "_blank"
        web:
          description: web.
          type: "integer"
          example: 1
        otg:
          description: otg.
          type: "integer"
          example: 1
        otgSequenceId:
          description: OTG Sequence Id.
          type: "integer"
          example: 7
        iconURL:
          description: Icon URL
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
    socialMenu:
      properties:
        sequenceId:
          description: Weight of menu item.
          type: integer
          example: 1
        content:
          description: Large image url.
          type: "string"
          example: "home"
        name:
          description: Title of menu.
          type: "string"
          example: "Home"
        URL:
          description: URL if there is any.
          type: "string"
          example: "/front"
        type:
          description: Type of menu item.
          type: "string"
          example: "internal/external"
        attributes:
          description: Attributes if target blank
          type: object
          properties:
            target:
              type: "string"
              example: "_blank"
        iconImage:
          description: Icon URL
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
    privacyMenu:
      properties:
        sequenceId:
          description: Weight of menu item.
          type: integer
          example: 1
        content:
          description: Large image url.
          type: "string"
          example: "home"
        name:
          description: Title of menu.
          type: "string"
          example: "Home"
        URL:
          description: URL if there is any.
          type: "string"
          example: "/front"
        type:
          description: Type of menu item.
          type: "string"
          example: "internal/external"
        attributes:
          description: Attributes if target blank
          type: object
          properties:
            target:
              type: "string"
              example: "_blank"
    headerMenuUserDetails:
      properties:
        name:
          description: Name
          type: "string"
          example: "Admin"
        imageUrl:
          description: Image URL.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        role:
          description: Role
          type: "string"
          example: ""
        market:
          description: Market
          type: "string"
          example: "Switzerland, TR Europe - Middle East - Africa, Taiwan, Adriatic"
    navData:
      properties:
        sequenceId:
          description: Sequence Id
          type: "integer"
          example: 1
        content:
          description: Content.
          type: "string"
          example: "leaderboard"
        name:
          description: Name
          type: "string"
          example: "LEADERBOARD"
        web:
          description: Web
          type: "integer"
          example: 0
        otg:
          description: otg
          type: "integer"
          example: 0
    productCategories:
      properties:
        categoryId:
          description: Category Id
          type: "integer"
          example: 1
        name:
          description: Name
          type: "string"
          example: "Name"
        dashboardImageUrl:
          description: Image URL.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        preferenceIconUrl:
          description: icon URL.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
    userInterest:
      properties:
        categoryId:
          description: Category Id
          type: "integer"
          example: 1
        name:
          description: Name
          type: "string"
          example: "Name"
        dashboardImageUrl:
          description: Image URL.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        preferenceIconUrl:
          description: icon URL.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        status:
          description: Status.
          type: "boolean"
          example: false
    productDetails:
      properties:
        nid:
          description: Content Id
          type: "integer"
          example: 1
        displayTitle:
          description: Display title.
          type: "string"
          example: "Display title"
        subTitle:
          description: Sub title.
          type: "string"
          example: "Subtitle"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
        whyTheresOnlyOne:
          description: Why Theres Only One.
          type: "string"
          example: "<p>Why Theres Only One</p>"
        demonstration:
          description: Demonstration.
          type: "string"
          example: "<p>Demonstration</p>"
        benefits:
          description: Denefits.
          type: "string"
          example: "<p>Benefits</p>"
        ifSheAsksShare:
          description: If She Asks Share.
          type: "string"
          example: "<p>If She Asks Share</p>"
        customerQuestions:
          description: Customer Questions.
          type: "string"
          example: "<p>Customer Questions</p>"
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageLarge.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageMedium.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageSmall.jpg"
        video:
          description: Video URL.
          type: "string"
          example: "http://xyz.com/sites/default/files/video.mp4"
        status:
          description: Status
          type: "integer"
          example: 1
        created:
          description: created
          type: "integer"
          example: 1530724829
        changed:
          description: changed
          type: "integer"
          example: 1533032469
        videoThumbnailImage:
          description: Video Thumbnail Image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/videoThumbnailImage.jpg"
        filemime:
          description: filemime.
          type: "string"
          example: "application/octet-stream"
        language:
          description: Language.
          type: "string"
          example: "en"
    badgesList:
      properties:
        key:
          description: Content Id
          type: "string"
          example: "key"
        tid:
          description: tid.
          type: "integer"
          example: "85713"
        image:
          description: Image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        earnedDescription:
          description: Earned Description.
          type: "string"
          example: "Earned Description"
        unearnedDescription:
          description: Unearned Description.
          type: "string"
          example: "Unearned Description"
    userActivityKeyStatus:
      properties:
        key:
          description: Key
          type: "string"
          example: "key"
        status:
          description: Status.
          type: "boolean"
          example: false
    userMarkets:
      properties:
        mid:
          description: mid
          type: "integer"
          example: "85792"
        name:
          description: Name.
          type: "string"
          example: "Adriatic"
    userRegions:
      properties:
        rid:
          description: rid
          type: "integer"
          example: "85775"
        name:
          description: Name.
          type: "string"
          example: "EMEA"
    MyFlagListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageLarge.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageMedium.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageSmall.jpg"
        title:
          description: Title.
          type: "string"
          example: "Title"
        subTitle:
          description: Sub Title.
          type: "string"
          example: "Sub Title"
        description:
          description: Description.
          type: "string"
          example: "<p>Description</p>"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
        type:
          description: Type.
          type: "string"
          example: "product_detail"
    userProfileRank:
      properties:
        uid:
          description: User Id
          type: integer
          example: 542
        userName:
          description: userName
          type: "string"
          example: "Real Name"
        userImage:
          description: User image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/userImage.jpg"
        rank:
          description: Rank.
          type: "integer"
          example: 3
        pointValue:
          description: Point Value.
          type: "integer"
          example: 1000
    userDashboardData:
      properties:
        uid:
          description: User Id
          type: integer
          example: 542
        rank:
          description: Rank.
          type: "integer"
          example: 3
        userPoints:
          description: User Points.
          type: "integer"
          example: 1000
        userName:
          description: User Name
          type: "string"
          example: "Real Name"
        userImage:
          description: User image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/userImage.jpg"
        star:
          description: Star
          type: "string"
          example: ""
        userMarket:
          description: User Market
          type: "string"
          example: "EMEA, Adriatic, Austria"
    videoListing:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 542
        title:
          description: Title.
          type: "string"
          example: "Title"
        image:
          description: Image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/image.jpg"
        name:
          description: Name
          type: "string"
          example: "Name"
        video:
          description: video url.
          type: "string"
          example: "http://xyz.com/sites/default/files/video.mp4"
        videoSubtitle:
          description: Video Subtitle
          type: "string"
          example: "Video Subtitle"
        pointValue:
          description: Point Value
          type: "integer"
          example: 100
    videoCategoryListing:
      properties:
        name:
          description: Name.
          type: "string"
          example: "Name"
        categoryId:
          description: Category Id
          type: integer
          example: 19676
    KeyValue:
      properties:
        key:
          description: Key
          type: "string"
          example: "key1"
        value:
          description: value.
          type: "string"
          example: "value1"
    productSearch:
      properties:
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageLarge.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageMedium.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageSmall.jpg"
        title:
          description: Title.
          type: "string"
          example: "Title"
        subtitle:
          description: Subtitle
          type: "string"
          example: "Subtitle"
        nid:
          description: Content Id
          type: integer
          example: 542
        videoURL:
          description: video url.
          type: "string"
          example: "https://sdfdsf.com"
        levelId:
          description: Level Id
          type: "integer"
          example: 100
        howToSellVideoURL:
          description: How to sell video url.
          type: "string"
          example: "https://sdfdsf.com"
    SearchListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageLarge.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageMedium.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageSmall.jpg"
        title:
          description: Title.
          type: "string"
          example: "Title"
        description:
          description: Description.
          type: "string"
          example: "<p>Description</p>"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
        type:
          description: Type.
          type: "string"
          example: "product_detail"
    ToolsListingItem:
      properties:
        nid:
          description: Content Id
          type: integer
          example: 123
        title:
          description: Title.
          type: "string"
          example: "Title"
        imageLarge:
          description: Large image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageLarge.jpg"
        imageMedium:
          description: Medium image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageMedium.jpg"
        imageSmall:
          description: Small image url.
          type: "string"
          example: "http://xyz.com/sites/default/files/imageSmall.jpg"
        fileUrl:
          description: File url.
          type: "string"
          example: "http://xyz.com/sites/default/files/file.pdf"
        description:
          description: Description.
          type: "string"
          example: "<p>Description</p>"
        pointValue:
          description: Point Value.
          type: "integer"
          example: 12
    TermConditionList:
      properties:
        title:
          description: Title.
          type: "string"
          example: "Title"
        body:
          description: Body.
          type: "string"
          example: "<p>Body</p>"
        market:
          description: Market.
          type: "string"
          example: ""
        effective_date:
          description: Effective date.
          type: "string"
          example: "October 01, 2018"


